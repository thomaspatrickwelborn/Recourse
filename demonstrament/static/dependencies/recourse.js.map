{"version":3,"file":"recourse.js","sources":["../../../development/regular-expressions/index.js","../../../development/get-property/index.js","../../../development/type-of/index.js","../../../development/typed-object-literal/index.js","../../../development/set-property/index.js","../../../development/delete-property/index.js","../../../development/variables/index.js","../../../development/numerable-entries/index.js","../../../development/entities/index.js","../../../development/entries/index.js","../../../development/expand/index.js","../../../development/impand/index.js","../../../development/accessors/index.js","../../../development/compand/options.js","../../../development/compand/index.js","../../../development/decompand/index.js","../../../development/assign-sources/index.js","../../../development/assign/index.js","../../../development/assign-concat/index.js","../../../development/is-array-like/index.js","../../../development/define-property/options.js","../../../development/define-property/index.js","../../../development/define-properties/index.js","../../../development/freeze/index.js","../../../development/seal/index.js","../../../development/keys/index.js","../../../development/values/index.js","../../../development/get-own-property-descriptor/options.js","../../../development/get-own-property-descriptor/index.js","../../../development/get-own-property-descriptors/index.js","../../../development/index.js"],"sourcesContent":["export default {\n  quotationEscape: /\\.(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/,\n}","import regularExpressions from '../regular-expressions/index.js'\nexport default function getProperty() {\n  const [$target, $path] = [...arguments]\n  if($path === undefined) return arguments[0]\n  const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n  let subtarget = $target\n  for(const $subpath of subpaths) {\n    try { subtarget = subtarget[$subpath] }\n    catch($err) { subtarget = undefined }\n  }\n  return subtarget\n}","export default ($operand) => Object\n  .prototype\n  .toString\n  .call($operand).slice(8, -1).toLowerCase()","import typeOf from '../type-of/index.js'\nexport default function typedObjectLiteral($value) {\n  let _typedObjectLiteral\n  const typeOfValue = typeOf($value)\n  if(typeOfValue === 'string') {\n    const value = $value.toLowerCase()\n    if(value === 'object') { _typedObjectLiteral = {} }\n    else if(value === 'array') { _typedObjectLiteral = [] }\n  }\n  else  {\n    if(typeOfValue === 'object') { _typedObjectLiteral = {} }\n    else if(typeOfValue === 'array') { _typedObjectLiteral = [] }\n  }\n  return _typedObjectLiteral\n}","import regularExpressions from '../regular-expressions/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nimport typeOf from '../type-of/index.js'\nexport default function setProperty() {\n  const $target = arguments[0]\n  const properties = (typeOf(arguments[1]) === 'string')\n    ? { [arguments[1]]: arguments[2] }\n    : arguments[1]\n  iterateProperties: \n  for(const [$path, $value] of Object.entries(properties)) {\n    const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n    const key = subpaths.pop()\n    let subtarget = $target\n    iterateSubpaths: \n    for(const $subpath of subpaths) {\n      subtarget[$subpath] = subtarget[$subpath] || (\n        isNaN($subpath) ? {} : []\n      )\n      subtarget = subtarget[$subpath]\n    }\n    subtarget[key] = $value\n  }\n  return $target\n}","import regularExpressions from '../regular-expressions/index.js'\nexport default function deleteProperty($target, $path) {\n  const subpaths = $path.split(new RegExp(regularExpressions.quotationEscape))\n  const key = subpaths.pop()\n  let subtarget = $target\n  for(const $subpath of subpaths) { subtarget = subtarget[$subpath] }\n  delete subtarget[key]\n  return\n}","const Primitives = {\n  'string': String, \n  'number': Number, \n  'boolean': Boolean, \n  'bigint': BigInt,\n  'undefined': undefined,\n  'null': null,\n}\nconst PrimitiveKeys = Object.keys(Primitives)\nconst PrimitiveValues = Object.values(Primitives)\nconst Objects = {\n  'object': Object,\n  'array': Array,\n}\nconst ObjectKeys = Object.keys(Objects)\nconst ObjectValues = Object.values(Objects)\nconst Types = Object.assign({}, Primitives, Objects)\nconst TypeKeys = Object.keys(Types)\nconst TypeValues = Object.values(Types)\nconst TypeMethods = [\n Primitives.String, Primitives.Number, Primitives.Boolean, \n Objects.Object, Objects.Array\n]\nexport {\n  Primitives, PrimitiveKeys, PrimitiveValues, \n  Objects, ObjectKeys, ObjectValues,\n  Types, TypeKeys, TypeValues, TypeMethods\n}\n","const Options = { enumerable: true, nonenumerable: true }\nexport default function numerableEntries($target, $options) {\n  const _numerableEntries = []\n  const options = Object.assign({}, Options, $options)\n  const { enumerable, nonenumerable } = options\n  if(!enumerable && !nonenumerable) return []\n  const propertyDescriptors = Object.getOwnPropertyDescriptors($target)\n  for(const [$property, $propertyDescriptor] of Object.entries(propertyDescriptors)) {\n    if(\n      enumerable && $propertyDescriptor.enumerable ||\n      nonenumerable && !$propertyDescriptor.enumerable\n    ) { _numerableEntries.push([$property, $propertyDescriptor.value]) }\n  }\n  return _numerableEntries\n}","import numerableEntries from '../numerable-entries/index.js'\nimport typeOf from '../type-of/index.js'\nconst Options = {\n  depth: 0,\n  maxDepth: 10,\n  enumerable: true,\n  nonenumerable: false,\n  recurse: true,\n}\nexport default function entities($target, $type, $options = {}) {\n  const _entities = []\n  const options = Object.assign({}, Options, $options, {\n    ancestors: [].concat($options.ancestors)\n  })\n  const { ancestors, maxDepth, nonenumerable, recurse } = options\n  if(options.depth >= maxDepth) { return _entities }\n  options.depth++\n  if(!ancestors.includes($target)) { ancestors.push($target) }\n  iterateObjectEntries: \n  for(const [$key, $value] of numerableEntries($target, {\n    enumerable: true, nonenumerable\n  })) {\n    const typeOfValue = typeOf($value)\n    if(\n      recurse && \n      ['array', 'object'].includes(typeOfValue) && \n      !ancestors.includes($value)\n    ) {\n      if($type === 'entries') { _entities.push([$key, entities($value, $type, options)]) }\n      else if($type === 'values') { _entities.push(entities($value, $type, options)) }\n      else if($type === 'keys') { _entities.push($key, entities($value, $type, options)) }\n    }\n    else {\n      if($type === 'entries') { _entities.push([$key, $value]) }\n      else if($type === 'values') { _entities.push($value) }\n      else if($type === 'keys') { _entities.push($key) }\n    }\n  }\n  return _entities\n}","import entities from '../entities/index.js'\nexport default function entries($target, $options) {\n  return entities($target, 'entries', $options)\n}","import { ObjectKeys } from '../variables/index.js'\nimport setProperty from '../set-property/index.js'\nimport typeOf from '../type-of/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nimport entries from '../entries/index.js'\nconst Options = { ancestors: [], nonenumerable: false }\nconst ValidPathTypes = ['string', 'function']\nexport default function expand($source, $path, $options = {}) {\n  const options = Object.assign({}, Options, $options, {\n    ancestors: [].concat($options.ancestors)\n  })\n  const { ancestors } = options\n  const typeOfPath = typeOf($path)\n  const typeOfSource = typeOf($source)\n  if(\n    !ValidPathTypes.includes(typeOfPath) ||\n    !ObjectKeys.includes(typeOfSource)\n  ) { return $source }\n  if(!ancestors.includes($source)) { ancestors.unshift($source) }\n  let target = typedObjectLiteral($source)\n  for(const [$sourceKey, $sourceValue] of entries(\n    $source, Object.assign({}, options, { recurse: false })\n  )) {\n    const targetValue = (\n      ObjectKeys.includes(typeOf($sourceValue))\n    ) ? expand($sourceValue, $path) : $sourceValue\n    if(\n      typeOfPath === ValidPathTypes[0] &&\n      $sourceValue !== null &&\n      !Object.is($sourceValue, $source) && \n      !ancestors.includes($sourceValue)\n    ) {\n      target[$sourceKey] = setProperty({}, $path, targetValue)\n    }\n    else if(typeOfPath === ValidPathTypes[1]) {\n      target[$sourceKey] = $path(targetValue)\n    }\n  }\n  return target\n}","import * as Variables from '../variables/index.js'\nimport getProperty from '../get-property/index.js'\nimport typeOf from '../type-of/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nimport entries from '../entries/index.js'\nconst Options = {}\nexport default function impand($source, $property, $options) {\n  const options = Object.assign({}, Options, $options)\n  const typeOfProperty = typeOf($property)\n  let target = typedObjectLiteral($source)\n  iterateSourceEntries: \n  for(const [$sourceKey, $sourceValue] of entries(\n    $source, Object.assign({}, options, { recurse: false })\n  )) {\n    if(typeOfProperty === 'string') { target[$sourceKey] = getProperty($sourceValue, $property) }\n    else if(typeOfProperty === 'function') { target[$sourceKey] = $property($sourceValue) }\n    if(target[$sourceKey] && typeof target[$sourceKey] === 'object') {\n      target[$sourceKey] = impand(target[$sourceKey], $property)\n    }\n  }\n  return target\n}","const defaultAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target[$property] }\n}\nconst getAccessor = ($target, $property) => {\n  if($property === undefined) { return $target }\n  else { return $target.get($property) }\n}\nexport default {\n  default: defaultAccessor,\n  get: getAccessor,\n}","import Accessors from '../accessors/index.js'\nexport default {\n  accessors: [Accessors.default],\n  ancestors: [],\n  depth: 0,\n  maxDepth: 10,\n  nonenumerable: false, \n  values: false,\n}","import Accessors from '../accessors/index.js'\nimport entries from '../entries/index.js'\nimport Options from './options.js'\nexport default function compand($source, $options) {\n  const target = []\n  const options = Object.assign({}, Options, $options, {\n    ancestors: [].concat($options.ancestors)\n  })\n  const { accessors, ancestors, nonenumerable, values } = options\n  options.depth++\n  if(options.depth > options.maxDepth) { return target }\n  iterateAccessors: \n  for(const $accessor of accessors) {\n    const source = $accessor($source)\n    if(!source) { continue iterateAccessors }\n    if(!ancestors.includes(source)) { ancestors.unshift(source) }\n    const objectProperties = entries(source, { nonenumerable, recurse: false })  \n    iterateObjectProperties: \n    for(const [$key, $value] of objectProperties) {\n      if(!values) { target.push($key) }\n      else if(values) { target.push([$key, $value]) }\n      if(\n        typeof $value === 'object' &&\n        $value !== null &&\n        !Object.is($value, source) && \n        !ancestors.includes($value)\n      ) {\n        const subsources = compand($value, options)\n        if(!values) {\n          for(const $subsource of subsources) {\n            const path = [$key, $subsource].join('.')\n            target.push(path)\n          }\n        }\n        else if(values) {\n          for(const [$subsourceKey, $subsource] of subsources) {\n            const path = [$key, $subsourceKey].join('.')\n            target.push([path, $subsource])\n          }\n        }\n      }\n    }\n  }\n  return target\n}","import regularExpressions from '../regular-expressions/index.js'\nimport typeOf from '../type-of/index.js'\nimport setProperty from '../set-property/index.js'\nimport entries from '../entries/index.js'\nimport options from './options.js'\nexport default function decompand($source, $options) {\n  const sourceEntries = (typeOf($source) === 'object') ? Object.entries($source) : $source\n  if(!sourceEntries) { return }\n  const target = (isNaN(sourceEntries[0][0])) ? {} : []\n  iterateSourceEntries: \n  for(const [$propertyPath, $propertyValue] of sourceEntries) {\n    setProperty(target, $propertyPath, $propertyValue)\n  }\n  return target\n}","import typeOf from '../type-of/index.js'\nconst Options = { }\nexport default function assignSources($target, $type, ...$sources) {\n  if(!$target) { return $target}\n  const typeOfTarget = typeOf($target)\n  iterateSources: \n  for(const $source of $sources) {\n    if(!$source) continue iterateSources\n    iterateSourceEntries: \n    for(const [\n      $sourcePropertyKey, $sourcePropertyValue\n    ] of Object.entries($source)) {\n      const targetPropertyValue = $target[$sourcePropertyKey]\n      const typeOfTargetPropertyValue = typeOf(targetPropertyValue)\n      const typeOfSourcePropertyValue = typeOf($sourcePropertyValue)\n      if(typeOfTarget === 'array' && $type === 'assignConcat') {\n        $target.push($sourcePropertyValue)\n      }\n      else {\n        if(['array', 'object'].includes(typeOfTargetPropertyValue)) {\n          assignSources(targetPropertyValue, $type, $sourcePropertyValue)\n        }\n        else {\n          Object.assign($target, { [$sourcePropertyKey]: $sourcePropertyValue })\n        }\n      }\n    }\n  }\n  return $target\n}","import assignSources from '../assign-sources/index.js'\nexport default function assign($target, ...$sources) {\n  return assignSources($target, 'assign', ...$sources)\n}","import assignSources from '../assign-sources/index.js'\nexport default function assignConcat($target, ...$sources) {\n  return assignSources($target, 'assignConcat', ...$sources)\n}","import entities from '../entities/index.js'\nimport typeOf from '../type-of/index.js'\nconst Options = { strict: true }\nexport default ($source, $options) => {\n  const options = Object.assign({}, Options, $options)\n  let isArrayLike\n  const typeOfSource = typeOf($source)\n  if(typeOfSource === 'array') { isArrayLike = true }\n  else if(\n    typeOfSource === 'object' &&\n    $source.length >= 0 && \n    Number.isInteger($source.length)\n  ) {\n    if(options.strict === false) {\n      isArrayLike = true\n    }\n    else {\n      iterateSourceKeys: \n      for(const $sourceKey of entities($source, 'keys', {\n        nonenumerable: true, recurse: false\n      }).reverse()) {\n        const lastIndex = Number($sourceKey)\n        if(lastIndex === $source.length - 1) {\n          isArrayLike = true\n          break iterateSourceKeys\n        }\n      }\n      if(isArrayLike === undefined) { isArrayLike = false }\n    }\n  }\n  else { isArrayLike = false }\n  return isArrayLike\n}","export default {\n  typeCoercion: false,\n}","import isArrayLike from '../is-array-like/index.js'\nimport typeOf from '../type-of/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nimport defineProperties from '../define-properties/index.js'\nimport * as Variables from '../variables/index.js'\nimport Options from './options.js'\nexport default function defineProperty($target, $propertyKey, $propertyDescriptor, $options) {\n  const propertyDescriptor = Object.assign({}, $propertyDescriptor)\n  let propertyDescriptorValue = propertyDescriptor.value\n  const options = Object.assign({}, Options, $options)\n  const typeOfPropertyDescriptorValue = typeOf(propertyDescriptor.value)\n  const targetPropertyValue = $target[$propertyKey]\n  const typeOfTargetPropertyValue = typeOf(targetPropertyValue)\n  const validObjects = ['array', 'object']\n  if(validObjects.includes(typeOfPropertyDescriptorValue)) {\n    if(validObjects.includes(typeOfTargetPropertyValue)) {\n      propertyDescriptor.value = defineProperties(targetPropertyValue, propertyDescriptorValue, options)\n    }\n    else {\n      const propertyValueTarget = typedObjectLiteral(isArrayLike(\n        Object.defineProperties({}, propertyDescriptorValue)\n      ) ? 'array' : 'object')\n      propertyDescriptor.value = defineProperties(propertyValueTarget, propertyDescriptorValue, options)\n    }\n  }\n  else if(\n    options.typeCoercion && \n    Object.getOwnPropertyDescriptor(propertyDescriptor, 'type') !== undefined &&\n    !['undefined', 'null'].includes(typeOfPropertyDescriptorValue)\n  ) {\n    propertyDescriptor.value = Variables.Primitives[propertyDescriptor.type](propertyDescriptorValue)\n  }\n  Object.defineProperty($target, $propertyKey, propertyDescriptor)\n  if($propertyDescriptor.sealed) { Object.seal($target[$propertyKey]) }\n  if($propertyDescriptor.frozen) { Object.freeze($target[$propertyKey]) }\n  return $target\n}","import defineProperty from '../define-property/index.js'\nexport default function defineProperties($target, $propertyDescriptors, $options) {\n  for(const [\n    $propertyKey, $propertyDescriptor\n  ] of Object.entries($propertyDescriptors)) {\n    defineProperty($target, $propertyKey, $propertyDescriptor, $options)\n  }\n  return $target\n}","import typeOf from '../type-of/index.js'\nconst Options = { ancestors: [] }\nfunction freeze($target, $options) {\n  const { ancestors } = Object.assign({}, Options, $options, {\n    ancestors: Object.assign([], $options.ancestors)\n  })\n  if(!options.ancestors.includes($target)) { options.ancestors.unshift($target) }\n  iterateTargetProperties: \n  for(const [$propertyKey, $propertyValue] of Object.entries($target)) {\n    const typeOfPropertyValue = typeOf($propertyValue)\n    if(options.ancestors.includes($propertyValue)) { continue iterateTargetProperties }\n    if(['array', 'object'].includes(typeOfPropertyValue)) {\n      freeze($propertyValue, options)\n    }\n  }\n  return Object.freeze($target)\n}\nexport default freeze","import typeOf from '../type-of/index.js'\nconst Options = { ancestors: [] }\nfunction seal($target, $options) {\n  const { ancestors } = Object.assign({}, Options, $options, {\n    ancestors: Object.assign([], $options.ancestors)\n  })\n  if(!options.ancestors.includes($target)) { options.ancestors.unshift($target) }\n  iterateTargetProperties: \n  for(const [$propertyKey, $propertyValue] of Object.entries($target)) {\n    const typeOfPropertyValue = typeOf($propertyValue)\n    if(options.ancestors.includes($propertyValue)) { continue iterateTargetProperties }\n    if(['array', 'object'].includes(typeOfPropertyValue)) {\n      seal($propertyValue, options)\n    }\n  }\n  return Object.seal($target)\n}\nexport default seal","import entities from '../entities/index.js'\nexport default function keys($target, $options) {\n  return entities($target, 'keys', $options)\n}","import entities from '../entities/index.js'\nexport default function values($target, $options) {\n  return entities($target, 'values', $options)\n}","import Accessors from '../accessors/index.js'\nexport default {\n  accessors: [Accessors.default],\n  ancestors: [],\n  delimiter: '.',\n  depth: 0,\n  frozen: false,\n  maxDepth: 10,\n  nonenumerable: true,\n  path: false,\n  sealed: false,\n  type: false,\n}","import typeOf from '../type-of/index.js'\nimport typedObjectLiteral from '../typed-object-literal/index.js'\nimport getOwnPropertyDescriptors from '../get-own-property-descriptors/index.js'\nimport Options from './options.js'\nexport default function getOwnPropertyDescriptor($properties, $propertyKey, $options = {}) {\n  const options = Object.assign({}, Options, $options, {\n    ancestors: Object.assign([], $options.ancestors),\n  })\n  if(options.depth >= options.maxDepth) { return }\n  else { options.depth++ }\n  const propertyDescriptor = Object.getOwnPropertyDescriptor($properties, $propertyKey)\n  if(!options.nonenumerable && !propertyDescriptor.enumerable) { return }\n  if(!options.ancestors.includes($properties)) { options.ancestors.unshift($properties) }\n  if(options.ancestors.includes(propertyDescriptor.value)) { return }\n  if(options.path) {\n    options.path = (\n      typeOf(options.path) === 'string'\n    ) ? [options.path, $propertyKey].join(options.delimiter) : $propertyKey\n    propertyDescriptor.path = options.path\n  }\n  if(options.type) { propertyDescriptor.type = typeOf(propertyDescriptor.value) }\n  if(options.frozen) { propertyDescriptor.frozen = Object.isFrozen(propertyDescriptor.value) }\n  if(options.sealed) { propertyDescriptor.sealed = Object.isSealed(propertyDescriptor.value) }\n  if(['array', 'object'].includes(typeOf(propertyDescriptor.value))) {\n    propertyDescriptor.value = getOwnPropertyDescriptors(propertyDescriptor.value, options)\n  }\n  return propertyDescriptor\n}","import getOwnPropertyDescriptor from '../get-own-property-descriptor/index.js'\nexport default function getOwnPropertyDescriptors($target, $options) {\n  const propertyDescriptors = {}\n  for(const [$propertyKey, $propertyDescriptor] of Object.entries(Object.getOwnPropertyDescriptors($target))) {\n    const propertyDescriptor = getOwnPropertyDescriptor($target, $propertyKey, $options)\n    if(propertyDescriptor) { propertyDescriptors[$propertyKey] = propertyDescriptor }\n  }\n  return propertyDescriptors\n}","import getProperty from './get-property/index.js'\nimport setProperty from './set-property/index.js'\nimport deleteProperty from './delete-property/index.js'\nimport expand from './expand/index.js'\nimport impand from './impand/index.js'\nimport compand from './compand/index.js'\nimport decompand from './decompand/index.js'\nimport assign from './assign/index.js'\nimport assignConcat from './assign-concat/index.js'\nimport defineProperties from './define-properties/index.js'\nimport defineProperty from './define-property/index.js'\nimport freeze from './freeze/index.js'\nimport seal from './seal/index.js'\nimport regularExpressions from './regular-expressions/index.js'\nimport typedObjectLiteral from './typed-object-literal/index.js'\nimport typeOf from './type-of/index.js'\nimport isArrayLike from './is-array-like/index.js'\nimport * as variables from './variables/index.js'\nimport keys from './keys/index.js'\nimport values from './values/index.js'\nimport entries from './entries/index.js'\nimport entities from './entities/index.js'\nimport numerableEntries from './numerable-entries/index.js'\nimport getOwnPropertyDescriptors from './get-own-property-descriptors/index.js'\nimport getOwnPropertyDescriptor from './get-own-property-descriptor/index.js'\n\nclass Recourse extends EventTarget {\n  static compand = compand\n  static decompand = decompand\n  static expand = expand\n  static impand = impand\n  static keys = keys\n  static values = values\n  static entries = entries\n  static entities = entities\n  static numerableEntries = numerableEntries\n  static get = getProperty\n  static set = setProperty\n  static delete = deleteProperty\n  static assign = assign\n  static assignConcat = assignConcat\n  static defineProperties = defineProperties\n  static defineProperty = defineProperty\n  static freeze = freeze\n  static seal = seal\n  static getOwnPropertyDescriptors = getOwnPropertyDescriptors\n  static getOwnPropertyDescriptor = getOwnPropertyDescriptor\n  static isArrayLike = isArrayLike\n  static typeOf = typeOf\n\n  constructor($target) {\n    super()\n    iterateStaticMutatorMethods: \n    for(const [$staticMethodName, $staticMethod] of Object.entries({\n      compand: Recourse.compand, decompand: Recourse.decompand, \n      expand: Recourse.expand, impand: Recourse.impand,\n      keys: Recourse.keys, values: Recourse.values, entries: Recourse.entries, \n      entities: Recourse.entities, numerableEntries: Recourse.numerableEntries,\n      get: Recourse.get, set: Recourse.set, delete: Recourse.delete,\n      assign: Recourse.assign, assignConcat: Recourse.assignConcat, \n      defineProperties: Recourse.defineProperties, defineProperty: Recourse.defineProperty,\n      freeze: Recourse.freeze, seal: Recourse.seal,\n      getOwnPropertyDescriptors: Recourse.getOwnPropertyDescriptors, getOwnPropertyDescriptor: Recourse.getOwnPropertyDescriptor,\n      isArrayLike: Recourse.isArrayLike, typeOf: Recourse.typeOf,\n    })) {\n      Object.defineProperty(this, $staticMethodName, {\n        value: $staticMethod.bind(this, $target)\n      })\n    }\n  }\n}\nexport {\n  Recourse, \n  getProperty, setProperty, deleteProperty,\n  expand, impand, compand, decompand,\n  assign, assignConcat,\n  defineProperties, defineProperty,\n  freeze, seal,\n  keys, values, entries,\n  entities, numerableEntries,\n  getOwnPropertyDescriptors, getOwnPropertyDescriptor,\n  isArrayLike, typeOf,\n  typedObjectLiteral, regularExpressions, variables,\n}"],"names":["Options","Variables.Primitives"],"mappings":"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"}