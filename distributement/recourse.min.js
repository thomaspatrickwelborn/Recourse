const e={string:String,number:Number,boolean:Boolean,bigint:BigInt,undefined:void 0,null:null},t=Object.keys(e),n=Object.values(e),o={object:Object,array:Array},s=Object.keys(o),r=Object.values(o),c=Object.assign({},e,o),i=Object.keys(c),a=Object.values(c),u=[e.String,e.Number,e.Boolean,o.Object,o.Array];var f=Object.freeze({__proto__:null,ObjectKeys:s,ObjectValues:r,Objects:o,PrimitiveKeys:t,PrimitiveValues:n,Primitives:e,TypeKeys:i,TypeMethods:u,TypeValues:a,Types:c}),l=e=>Object.prototype.toString.call(e).slice(8,-1).toLowerCase();function b(e){let t;const n=l(e);if("string"===n){const n=e.toLowerCase();"object"===n?t={}:"array"===n&&(t=[])}else"object"===n?t={}:"array"===n&&(t=[]);return t}var p={quotationEscape:/\.(?=(?:[^"]*"[^"]*")*[^"]*$)/};function j(e,t){const n=e.split(new RegExp(p.quotationEscape)),o=n.pop();let s=t;for(const e of n)s=s[e];return s[o]}function O(e,t){const n=e.split(new RegExp(p.quotationEscape)),o=n.pop(),s=o&&!isNaN(o)?[]:{};let r=s,c=0;for(;c<n.length-2;){const e=keypaths[c];isNaN(e),r[e]={},r=r[e],c++}return r[o]=t,s}const y=["string","function"];function d(e,t){const n=l(t),o=l(e);if(!y.includes(n)||!s.includes(o))return e;let r=b(e);for(const[o,c]of Object.entries(e)){const e=s.includes(l(c))?d(c,t):c;n===y[0]?r[o]=O(t,e):n===y[1]&&(r[o]=t(e))}return r}function g(e,t){const n=l(t),o=l(e);if(!["string","function"].includes(n)||!["array","object"].includes(o))return e;let s=b(e);for(const[o,r]of Object.entries(e))"string"===n?s[o]=j(t,r):"function"===n&&(s[o]=t(r)),s[o]&&"object"==typeof s[o]&&(s[o]=g(s[o],t));return s}var v=e=>{let t;const n=l(e);if("array"===n)t=!0;else if("object"===n&&Number.isInteger(e.length)&&e.length>=0){e:for(const n of Object.keys(Object.getOwnPropertyDescriptors(e)))if("length"!==n&&(t=!isNaN(n),!t))break e}else t=!1;return t};const h={depth:0,maxDepth:10,accessors:[{default:(e,t)=>void 0===t?e:e[t],get:(e,t)=>void 0===t?e:e.get(t)}.default],ancestors:[]};function m(e,t){const n=[],o=Object.assign({},h,t,{ancestors:[].concat(t.ancestors)});if(o.depth++,o.depth>o.maxDepth)return n;for(const t of o.accessors){const s=t.bind(e)(e);if(s){o.ancestors.includes(s)||o.ancestors.unshift(s);for(const[e,t]of Object.entries(s))if(o.values?o.values&&n.push([e,t]):n.push(e),"object"==typeof t&&null!==t&&!Object.is(t,s)&&!o.ancestors.includes(t)){const s=m(t,o);if(o.values){if(o.values)for(const[t,o]of s){const s=[e,t].join(".");n.push([s,o])}}else for(const t of s){const o=[e,t].join(".");n.push(o)}}}}return n}function N(e,...t){if(!e)return e;for(const n of t)if(n)for(const[t,o]of Object.entries(n)){const n=l(e[t]),s=l(o);e[t]="object"===n&&"object"===s?N(e[t],o):o}return e}function P(e,...t){if(!e)return e;for(const n of t)if(n)for(const[t,o]of Object.entries(n)){const n=l(e[t]),s=l(o);e[t]="object"===n&&"object"===s?P(e[t],o):"array"===n&&"array"===s?e[t].concat(o):o}return e}var w={depth:0,path:null,ancestors:[]},D={delimiter:".",maxDepth:10,path:!1,retrocursion:!1,type:!1};function x(e,t,n){const o=Object.assign({},w,D,n,{ancestors:Object.assign([],n.ancestors)}),s=Object.getOwnPropertyDescriptor(e,t);if(o.ancestors.includes(e)||o.ancestors.unshift(e),o.retrocursion||!o.ancestors.includes(s.value))return o.path&&(o.path="string"===l(o.path)?[o.path,t].join(o.delimiter):t,s.path=o.path),o.type&&(s.type=l(s.value)),["array","object"].includes(l(s.value))&&(s.value=k(s.value,o)),s}function k(e,t){const n={},o=Object.assign({},w,D,t);if(o.depth>=o.maxDepth)return n;o.depth++;for(const[t,s]of Object.entries(Object.getOwnPropertyDescriptors(e))){const s=x(e,t,o);void 0!==s&&(n[t]=s)}return n}var E={typeCoercion:!1};function C(t,n,o,s){const r=Object.assign({},o),c=Object.assign({},E,s),i=l(r.value);if(["array","object"].includes(i)){const e=v(Object.defineProperties(b(i),r.value))?[]:{};r.value=T(e,r.value,c)}else c.typeCoercion&&void 0!==Object.getOwnPropertyDescriptor(r,"type")&&!["undefined","null"].includes(i)&&(r.value=e[r.type](r.value));return Object.defineProperty(t,n,r),t}function T(e,t,n){const o=Object.assign({},E,n);for(const[n,s]of Object.entries(t))C(e,n,s,o);return e}function _(e){for(const[t,n]of Object.entries(e))Object.is(n,e)||n&&"object"==typeof n&&_(n);return Object.freeze(e)}export{d as expandTree,g as impandTree,v as isArrayLike,m as propertyDirectory,N as recursiveAssign,P as recursiveAssignConcat,T as recursiveDefineProperties,C as recursiveDefineProperty,_ as recursiveFreeze,x as recursiveGetOwnPropertyDescriptor,k as recursiveGetOwnPropertyDescriptors,p as regularExpressions,l as typeOf,b as typedObjectLiteral,f as variables};
//# sourceMappingURL=recourse.min.js.map
