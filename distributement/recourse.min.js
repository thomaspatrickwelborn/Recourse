function e(e){const t=/([a-zA-Z_][a-zA-Z0-9_]*)|(\d+)|\["([^"]*)"\]|"([^"]*)"|\./g,s=[];let n;for(;null!==(n=t.exec(e));)n[1]?s.push(n[1]):n[2]?s.push(parseInt(n[2],10)):n[3]?s.push(n[3]):n[4]&&s.push(n[4]);return s}var t=e=>Object.prototype.toString.call(e).slice(8,-1).toLowerCase();const s={string:String,number:Number,boolean:Boolean,bigint:BigInt,undefined:void 0,null:null},n=Object.keys(s),r=Object.values(s),c={object:Object,array:Array,map:Map},i=Object.keys(c),o=Object.values(c),a=Object.assign({},s,c),u=Object.keys(a),l=Object.values(a),f=[s.String,s.Number,s.Boolean,c.Object,c.Array];var p=Object.freeze({__proto__:null,ObjectKeys:i,ObjectValues:o,Objects:c,PrimitiveKeys:n,PrimitiveValues:r,Primitives:s,TypeKeys:u,TypeMethods:f,TypeValues:l,Types:a});const b={returnValue:"target"};const g={returnValue:"target"};const d={Object:function(...e){if(["object","array"].includes(t(e[0]))){if(["string","number"].includes(t(e[1]))){const[t,s,n]=e,{returnValue:r}=Object.assign({},b,n);return"entries"!==r?t[s]:[s,t[s]]}{const[t,s]=e,{returnValue:n}=Object.assign({},b,s);return"entries"!==n?t:Object.entries(t)}}return this?.next(...e)},Map:function(...e){if("map"!==t(e[0]))return this?.next(...e);if(!n.includes(t(e[1]))){const[t,s]=e,{returnValue:n}=Object.assign({},g,s);return"target"===n?Object.fromEntries(t):"receiver"===n?t:"entries"===n?Array.from(t.entries()):void 0}{const[t,s,n]=e,{returnValue:r}=Object.assign({},g,n);if(t.has(s)){if("target"===r)return t.get(s);if("entries"===r)return[s,t.get(s)]}else if("receiver"===r&&Object.hasOwn(t,s))return t[s]}}},j={Object:function(...e){if(["object","array"].includes(t(e[0]))){if(["string","number"].includes(t(e[1]))){const[t,s,n]=e;return t[s]=n,t[s]}{const[t,s]=e;for(const e of Object.keys(t))delete t[e];for(const[e,n]of Object.entries(s))t[e]=n;return t}}return this?.next(...e)},Map:function(...e){if("map"!==t(e[0]))return this?.next(...e);if(n.includes(t(e[1]))){let[t,s,n,r]=e;const{returnValue:c}=Object.assign({},g,r);return t.set(s,n),t.get(s)}{let[t,s,n]=e;const{returnValue:r}=Object.assign({},g,n);t.clear();for(const[e,s]of Object.entries(source))t.set(e,s);return t}}},O={Object:function(...e){const[s,n]=e;if(!["object","array"].includes(t(s)))return this?.next(...e);if(["string","number"].includes(t(n)))return delete s[n];for(const e of Object.keys(s))delete s[e]},Map:function(...e){if(e.length,"map"!==t(e[0]))return this?.next(...e);if(n.includes(t(e[1]))){let[t,s,n]=e;const{returnValue:r}=Object.assign({},g,n);return t.delete(s)}{let[t]=e;return t.clear()}}};class h extends EventTarget{constructor(e){super();const t=e.map(((t,s)=>t.bind({next:e[s+1]})));Object.defineProperties(this,{cess:{value:function(){try{return t[0](...arguments)}catch(e){console.error(e)}}}})}}var y=Object.freeze({__proto__:null,Deleters:O,Getters:d,Setters:j,Tensors:h});const m={getters:[d.Object,d.Map]};function v(){const[t,s,n]=[...arguments];if(void 0===s)return arguments[0];const r=Object.assign({},m,n),c=new h(r.getters),i=e(s);let o=t;e:for(const e of i)try{if(o=c.cess(o,e,r),void 0===o)break e}catch(e){break e}return o}function w(e){let s;const n=t(e);if("string"===n){const t=e.toLowerCase();s="object"===t?new Object:"array"===t?new Array:"map"===t?new Map:{}}else s="object"===n?new Object:"array"===n?new Array:"map"===value?new Map:{};return s}const k={getters:[d.Object,d.Map],setters:[j.Object,j.Map]};function x(){const s=[...arguments];if("string"===t(s[1])){const[t,n,r,c]=s,i=Object.assign({},k,c),o=new h(i.getters),a=new h(i.setters),{enumerable:u,nonenumerable:l}=i,f=(o.cess(t,i),e(n)),p=f.pop();let b=t;e:for(const e of f)if(b=o.cess(b,e,i)||a.cess(b,e,isNaN(e)?{}:[],i),void 0===b)break e;return a.cess(b,p,r,i),t}{const[e,t]=s;return e}}const D={deleters:[O.Object,O.Map],returnValue:"target"};function M(t,s,n){const r=Object.assign({},D,n),c=new h(r.deleters),i=e(s),o=i.pop(),a=v(t,i.join("."),r)||t;c.cess(a,o,r)}function P(e,s={}){const n=Object.assign({},s),r="entries"!==n.returnValue?{}:[],c=["array","object"].includes(t(e))?Object.keys(Object.getOwnPropertyDescriptors(e)):Array.from(e.keys());for(const t of c){const s=z(e,t,n);s&&("entries"!==n.returnValue?r[t]=s:r.push(s))}return r}const V={getters:[d.Object,d.Map],delimiter:".",depth:0,frozen:!1,maxDepth:10,nonenumerable:!0,path:!1,sealed:!1,type:!1};function z(e,s,n={}){const r=Object.assign({},V,n,{ancestors:Object.assign([],n.ancestors)});if(r.depth>=r.maxDepth)return;r.depth++;const c=new h(r.getters).cess(e,s,r);if(void 0!==c){const n=t(e),o="map"!==n?Object.getOwnPropertyDescriptor(e,s):{configurable:!1,enumerable:!0,value:c[1],writable:!0};if(!r.nonenumerable&&!o.enumerable)return;if(r.ancestors.includes(e)||r.ancestors.unshift(e),r.ancestors.includes(c))return;return r.path&&(r.path="string"===t(r.path)?[r.path,s].join(r.delimiter):s,o.path=r.path),r.type&&(o.type=t(c)),r.frozen&&(o.frozen=Object.isFrozen(c)),r.sealed&&(o.sealed=Object.isSealed(c)),"map"!==n&&i.includes(t(c))?o.value=P(c,r):"map"===n&&i.includes(t(c[1]))&&(o.value=P(c[1],r)),"entries"!==r.returnValue?o:[s,o]}}const A={getters:[d.Object,d.Map],ancestors:[],depth:0,maxDepth:10,enumerable:!0,nonenumerable:!1,recurse:!0,returnValue:"target"};function N(e,s,n={}){t(e);const r=[],c=Object.assign({},A,n,{ancestors:Object.assign([],n.ancestors)}),{ancestors:o,maxDepth:a,enumerable:u,nonenumerable:l,recurse:f}=c;if(c.depth>=a)return;o.includes(e)||o.unshift(e),c.depth++;const p=["array","object"].includes(t(e))?Object.keys(Object.getOwnPropertyDescriptors(e)):Array.from(e.keys());for(const n of p){const a="map"!==t(e)?Object.getOwnPropertyDescriptor(e,n):{configurable:!1,enumerable:!0,value:new h(c.getters).cess(e,n,c),writable:!0};if(a&&(u&&a.enumerable||l&&!a.enumerable)){const e=a.value,u=t(e);if(f&&i.includes(u)&&!o.includes(e)){o.unshift(e);const t=N(e,s,c);t.length?"entries"===s?r.push([n,t]):"values"===s?r.push(t):"keys"===s&&r.push(n,t):"entries"===s?r.push([n,e]):"values"===s?r.push(e):"keys"===s&&r.push(n)}else"entries"===s?r.push([n,e]):"values"===s?r.push(e):"keys"===s&&r.push(n)}}return r}const _=["string","function"];function C(e,s,n={}){const r=Object.assign({},n),c=t(s),o=t(e);if(!_.includes(c)||!i.includes(o))return e;let a=w(e);for(const[n,o]of N(e,"entries",Object.assign({},r,{recurse:!1}))){const e=i.includes(t(o))?C(o,s,r):o;c===_[0]?a[n]=x({},s,e,r):c===_[1]&&(a[n]=s(e))}return a}const L={ancestors:[],getters:[d.Object,d.Map],depth:0,maxDepth:10};function S(e,s,n={}){const r=Object.assign({},L,n,{ancestors:Object.assign([],n.ancestors)}),{ancestors:c,values:i}=r;if(r.depth>r.maxDepth)return;r.depth++;const o=new h(r.getters).cess(e,r);c.includes(o)||c.unshift(o);const a=t(s);let u=w(e);for(const[t,n]of N(e,"entries",Object.assign({},r,{recurse:!1})))"string"===a?u[t]=v(n,s):"function"===a&&(u[t]=s(n)),u[t]&&"object"==typeof u[t]&&(u[t]=S(u[t],s));return u}const T={depth:0,getters:[d.Object,d.Map],maxDepth:10,values:!1};function I(e,t){const s=[],n=Object.assign({},T,t,{ancestors:Object.assign([],t.ancestors)}),{ancestors:r,values:c}=n;if(n.depth++,n.depth>n.maxDepth)return s;const i=new h(n.getters).cess(e,n);r.includes(e)||r.unshift(e);const o=N(e,"entries",Object.assign(n,{recurse:!1}));for(const[e,t]of o)if(c?c&&s.push([e,t]):s.push(e),"object"==typeof t&&null!==t&&!Object.is(t,i)&&!r.includes(t)){const r=I(t,n);if(c){if(c)for(const[t,n]of r){const r=[e,t].join(".");s.push([r,n])}}else for(const t of r){const n=[e,t].join(".");s.push(n)}}return s}const B={setters:[j.Object,j.Map]};function E(e,s){const n=Object.assign({},B,s),r="object"===t(e)?N(e,"entries",n):e;if(!r)return;const c=isNaN(r[0][0])?{}:[];for(const[e,t]of r)x(c,e,t,n);return c}const K={getters:[d.Object,d.Map],setters:[j.Object,j.Map]};function Z(e,s,...n){if(!e)return e;const r=Object.assign({},K),c=(new h(r.getters),new h(r.setters)),o=t(e);e:for(const r of n){if(!i.includes(t(r)))continue e;const n=N(r,"entries",{recurse:!1});for(const[r,a]of n){const n=e[r],u=t(n);t(a);"array"===o&&"assignConcat"===s?e.push(a):i.includes(u)?Z(n,s,a):c.cess(e,r,a)}}return e}var F=(e,...t)=>Z(e,"assign",...t),G=(e,...t)=>Z(e,"assignConcat",...t);const J={strict:!0};function q(e,s){const n=Object.assign({},J,s);let r;const c=t(e);if("array"===c)r=!0;else if("object"===c&&e.length>=0&&Number.isInteger(e.length))if(!1===n.strict)r=!0;else{e:for(const t of N(e,"keys",{nonenumerable:!0,recurse:!1}).reverse()){if(Number(t)===e.length-1){r=!0;break e}}void 0===r&&(r=!1)}else r=!1;return r}const H={typeCoercion:!1};function Q(e,n,r,c){const o=Object.assign({},r);let a=o.value;const u=Object.assign({},H,c),l=t(o.value),f=e[n],p=t(f);if(i.includes(l))if(i.includes(p))o.value=R(f,a,u);else{const e=w(q(Object.defineProperties({},a))?"array":"object");o.value=R(e,a,u)}else u.typeCoercion&&void 0!==Object.getOwnPropertyDescriptor(o,"type")&&!["undefined"].includes(l)&&(o.value=s[o.type](a));return Object.defineProperty(e,n,o),r.sealed&&Object.seal(e[n]),r.frozen&&Object.freeze(e[n]),e}function R(e,t,s){for(const[n,r]of Object.entries(t))Q(e,n,r,s);return e}const U={getters:[d.Object,d.Map],ancestors:[],depth:0,maxDepth:10};function W(e,s={}){const n=Object.assign({},U,s,{ancestors:Object.assign([],s.ancestors)}),{ancestors:r,values:c}=n;if(n.depth>n.maxDepth)return;n.depth++;const o=new h(n.getters).cess(e,n);r.includes(o)||r.unshift(o);const a=N(e,"entries",Object.assign(n,{recurse:!1}));for(const[e,s]of a)r.includes(s)||i.includes(t(s))&&W(s,n);return Object.freeze(e)}const X={getters:[d.Object,d.Map],ancestors:[],depth:0,maxDepth:10};function Y(e,s={}){const n=Object.assign({},X,s,{ancestors:Object.assign([],s.ancestors)}),{ancestors:r,values:c}=n;if(n.depth>n.maxDepth)return;n.depth++;const o=new h(n.getters).cess(e,n);r.includes(o)||r.unshift(o);const a=N(e,"entries",Object.assign(n,{recurse:!1}));for(const[e,s]of a)r.includes(s)||i.includes(t(s))&&Y(s,n);return Object.seal(e)}const $={strict:!0};function ee(e,s){const n=Object.assign({},$,s);let r;const c=t(e);if("map"===c)r=!0;else if("object"===c&&e.size>=0&&Number.isInteger(e.size))if(!1===n.strict)r=!0;else{e:for(const t of N(e,"entries",{nonenumerable:!0,recurse:!1})){if(!q(t,n)&&2!==t.length){r=!1;break e}r=!0}void 0===r&&(r=!1)}else r=!1;return r}var te=(e,t)=>N(e,"keys",t),se=(e,t)=>N(e,"values",t),ne=(e,t)=>N(e,"entries",t);const re={ancestors:[],depth:0,maxDepth:10,getters:[d.Object,d.Map],returnValue:"receiver"};function ce(e,s={}){const n=Object.assign({},re,s,{ancestors:Object.assign([],s.ancestors)}),{ancestors:r,maxDepth:c,returnValue:o}=n;if(r.includes(e)||r.unshift(e),n.depth>=c)return;n.depth++;const a=new h(n.getters).cess(e,n);if(void 0===a)return;const u=w(t(a)),l=N(e,"entries",Object.assign({},n,{recurse:!1}));e:for(const[e,s]of l){let c;if(i.includes(t(s))){if(r.includes(s))continue e;r.unshift(s),c=ce(s,n)}else c=s;try{u[e]=c}catch(e){console.error(e)}}return u}const ie={space:0,replacer:null,returnValue:"receiver"};function oe(e,t){const s=Object.assign({},ie,t);return JSON.stringify(ce(e,s),s.replacer,s.space)}class ae extends EventTarget{static compand=I;static decompand=E;static expand=C;static impand=S;static keys=te;static values=se;static entries=ne;static entities=N;static get=v;static set=x;static delete=M;static assign=F;static assignConcat=G;static defineProperties=R;static defineProperty=Q;static freeze=W;static seal=Y;static getOwnPropertyDescriptors=P;static getOwnPropertyDescriptor=z;static isArrayLike=q;static isMapLike=ee;static typeOf=t;static toString=oe;static valueOf=ce;constructor(e){super();for(const[t,s]of Object.entries({compand:ae.compand,decompand:ae.decompand,expand:ae.expand,impand:ae.impand,entities:ae.entities,keys:ae.keys,values:ae.values,entries:ae.entries,get:ae.get,set:ae.set,delete:ae.delete,assign:ae.assign,assignConcat:ae.assignConcat,defineProperties:ae.defineProperties,defineProperty:ae.defineProperty,freeze:ae.freeze,seal:ae.seal,getOwnPropertyDescriptors:ae.getOwnPropertyDescriptors,getOwnPropertyDescriptor:ae.getOwnPropertyDescriptor,isArrayLike:ae.isArrayLike,isMapLike:ae.isMapLike,typeOf:ae.typeOf}))Object.defineProperty(this,t,{value:s.bind(this,e)})}}export{ae as Recourse,F as assign,G as assignConcat,I as compand,E as decompand,R as defineProperties,Q as defineProperty,M as delete,N as entities,ne as entries,C as expand,W as freeze,v as get,z as getOwnPropertyDescriptor,P as getOwnPropertyDescriptors,S as impand,q as isArrayLike,te as keys,Y as seal,x as set,e as splitPath,y as tensors,oe as toString,t as typeOf,w as typedObjectLiteral,ce as valueOf,se as values,p as variables};
//# sourceMappingURL=recourse.min.js.map
